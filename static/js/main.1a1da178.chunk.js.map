{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMode","role","theme","htmlFor","TextForm","useState","text","setText","style","color","heading","value","onChange","event","target","backgroundColor","rows","newText","toUpperCase","showAlert","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","Alert","alert","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","setTheme","message","setTimeout","body","toggleMode1","defaultProps","aboutText","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1a1da178.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav\r\n      className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}\r\n    >\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          {props.title}\r\n        </a>\r\n        <button\r\n          className=\"navbar-toggler\"\r\n          type=\"button\"\r\n          data-bs-toggle=\"collapse\"\r\n          data-bs-target=\"#navbarSupportedContent\"\r\n          aria-controls=\"navbarSupportedContent\"\r\n          aria-expanded=\"false\"\r\n          aria-label=\"Toggle navigation\"\r\n        >\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\r\n                Home\r\n              </Link> */}\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              {/* <Link className=\"nav-link\" to=\"/about\">\r\n                {props.aboutText}\r\n              </Link> */}\r\n            </li>\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input\r\n              className=\"form-control me-2\"\r\n              type=\"search\"\r\n              placeholder=\"Search\"\r\n              aria-label=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-success\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          {/* <div className={`form-check form-switch text-${props.mode === \"light\" ? \"dark\" : \"light\"}`}>\r\n            <input\r\n              className=\"form-check-input mx-1\"\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id=\"flexSwitchCheckDefault\"\r\n              onClick={props.toggleMode1}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\r\n              Theme 1\r\n            </label>\r\n          </div> */}\r\n          <div\r\n            className={`form-check form-switch text-${\r\n              props.mode === \"light\" ? \"dark\" : \"light\"\r\n            } mx-2`}\r\n          >\r\n            <input\r\n              className=\"form-check-input\"\r\n              onClick={props.toggleMode}\r\n              type=\"checkbox\"\r\n              role=\"switch\"\r\n              id={`flexSwitchCheck${props.theme ==='success'?'Disabled':'Default'}`}\r\n            />\r\n            <label\r\n              className=\"form-check-label\"\r\n              htmlFor={`flexSwitchCheck${props.theme ==='success'?'Disabled':'Default'}`} \r\n            >\r\n              Dark Mode\r\n            </label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: \"Set title here\",\r\n  aboutText: \"About\",\r\n};\r\n","import React,{useState} from \"react\";\r\n\r\n\r\nexport default function TextForm(props) {\r\n\r\n  const handleUpClick =() =>{\r\n      //console.log(\"Uppercase was clicked\" + text);\r\n      let newText = text.toUpperCase();\r\n      setText(newText);\r\n      props.showAlert(\"Coverted to uppercase!\",\"success\");\r\n  }\r\n  const handleLowClick =() =>{\r\n      //console.log(\"Uppercase was clicked\" + text);\r\n      let newText = text.toLowerCase();\r\n      setText(newText);\r\n      props.showAlert(\"Coverted to lowercase!\",\"success\");\r\n  }\r\n\r\n  const handleExtraSpaces =() =>{\r\n      let newText = text.split(/[ ]+/);\r\n      setText(newText.join(\" \"));\r\n      props.showAlert(\"Removed extra spaces!\",\"success\");\r\n  }\r\n\r\n  const handleClear= ()=>{\r\n     setText(\"\");\r\n     props.showAlert(\"Text cleared!\",\"success\");\r\n  }\r\n\r\n  const handleCopy=()=>{\r\n      var text = document.getElementById(\"myBox\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      props.showAlert(\"Copied to clipboard!\",\"success\");\r\n  }\r\n\r\n  const handleOnChange= (event) =>{\r\n    setText(event.target.value);\r\n\r\n  }\r\n\r\n  \r\n    \r\n  const [text, setText] = useState('');\r\n  //setText(\"new text\");\r\n  return (\r\n    <>\r\n    <div className=\"container\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n      <h2>{props.heading}</h2>  \r\n      <div className=\"mb-3\">\r\n        <textarea\r\n          className=\"form-control\"\r\n          value= {text}\r\n          onChange={handleOnChange}\r\n          style={{backgroundColor: props.mode ==='dark'?'#212529':'white',color: props.mode ==='dark'?'white':'black'}}\r\n          id=\"myBox\"\r\n          rows=\"8\"\r\n        ></textarea>\r\n      </div>\r\n      <button type=\"button\" className={`btn btn-${props.theme} mx-2`} onClick={handleUpClick}>Uppercase</button>\r\n      <button type=\"button\" className={`btn btn-${props.theme} mx-2`} onClick={handleLowClick}>Lowercase</button>\r\n      <button type=\"button\" className={`btn btn-${props.theme} mx-2`} onClick={handleClear}>Clear Text</button>\r\n      <button type=\"button\" className={`btn btn-${props.theme} mx-2`} onClick={handleCopy}>Copy Text</button>\r\n      <button type=\"button\" className={`btn btn-${props.theme} mx-2`} onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n    \r\n    </div> \r\n    <div className=\"container my-5\" style={{color: props.mode ==='dark'?'white':'black'}}>\r\n          \r\n        <h3>Your text summary</h3>\r\n        <p>{text.length>0?text.split(\" \").length:\"0 words\"} words and {text.length} characters</p>\r\n        <p>{text.length>0?0.008 * text.split(\" \").length:\"0\"} Minutes Read</p>\r\n        <h3>Preview</h3>\r\n        <p>{text.length>0?text:\"Enter something to preview it\"}</p>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Alert(props) {\r\n    const capitalize=(word)=>{\r\n        const lower = word.toLowerCase();\r\n            return lower.charAt(0).toUpperCase()+ lower.slice(1);\r\n        }\r\n    \r\n  return (\r\n    props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n      <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg}\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\nimport Alert from \"./components/Alert\";\nimport React, { useState } from \"react\";\n// import { BrowserRouter as Router, Switch , Route} from \"react-router-dom\";\n\nexport default function App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const [theme, setTheme] = useState(\"primary\");\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setTheme(\"primary\");\n      document.body.style.backgroundColor = \"rgb(11 33 55)\";\n      showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      setTheme(\"primary\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  };\n\n  const toggleMode1 = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      setTheme(\"success\");\n      document.body.style.backgroundColor = \"rgb(12 65 65)\";\n      showAlert(\"Theme 1 is enabled\", \"success\");\n    }\n  };\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n      {/* <Router> */}\n        <Navbar\n          title=\"TextUtils\"\n          mode={mode}\n          toggleMode={toggleMode}\n          toggleMode1={toggleMode1}\n        />\n        <br />\n        <br />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          {/* <Switch>\n            <Route exact path=\"/about\">\n              <About />\n            </Route>\n            <Route exact path=\"/\"> */}\n              <TextForm\n                heading=\"Enter the text to analyze\"\n                mode={mode}\n                showAlert={showAlert}\n                theme={theme}\n              />\n            {/* </Route>\n          </Switch> */}\n        </div>\n      {/* </Router> */}\n    </>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}